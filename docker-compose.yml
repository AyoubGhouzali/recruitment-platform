# Docker Compose configuration for AI Recruitment Platform

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15.3-alpine
    container_name: recruitment-db
    environment:
      POSTGRES_DB: recruitment_platform
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot Backend
  backend:
    build: .
    container_name: recruitment-backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/recruitment_platform
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      JWT_SECRET: secureJwtSecretKeyForDockerEnvironment
      JWT_EXPIRATION: 86400000
    ports:
      - "8080:8080"
    volumes:
      - ./uploads:/app/uploads
    restart: unless-stopped

  # React Frontend
  frontend:
    build: ./frontend
    container_name: recruitment-frontend
    depends_on:
      - backend
    ports:
      - "80:80"
    restart: unless-stopped

volumes:
  postgres-data:
    driver: local
